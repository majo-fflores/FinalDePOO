/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package interfaces.views;
import logica.*;
import java.util.ArrayList;
import javax.swing.JTextArea;
/**
 *
 * @author Conecta
 */
public class PanelCarreras extends javax.swing.JPanel {
private Gestion gestion;
    /**
     * Creates new form PanelCarreras
     */
    public PanelCarreras(Gestion gestion) {
        this.gestion = gestion;
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContenidoCarreras = new javax.swing.JPanel();
        tituloSeleccionaCarreraPanelCarreras = new javax.swing.JLabel();
        seleccionarCarreraBoxPanelCarreras = new javax.swing.JComboBox<>();
        scrollPanelCarreras = new javax.swing.JScrollPane();
        btnMostrarDatosCarrera = new javax.swing.JButton();
        bntMostrarAlumnosInscriptos = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(644, 600));

        panelContenidoCarreras.setBackground(new java.awt.Color(255, 255, 255));

        tituloSeleccionaCarreraPanelCarreras.setBackground(new java.awt.Color(255, 255, 255));
        tituloSeleccionaCarreraPanelCarreras.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        tituloSeleccionaCarreraPanelCarreras.setForeground(new java.awt.Color(255, 77, 109));
        tituloSeleccionaCarreraPanelCarreras.setText("Seleccionar carrera: ");

        seleccionarCarreraBoxPanelCarreras.setBackground(new java.awt.Color(255, 255, 255));
        seleccionarCarreraBoxPanelCarreras.setForeground(new java.awt.Color(0, 0, 0));
        seleccionarCarreraBoxPanelCarreras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        seleccionarCarreraBoxPanelCarreras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 10, 84), 2));
        seleccionarCarreraBoxPanelCarreras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarCarreraBoxPanelCarrerasActionPerformed(evt);
            }
        });

        scrollPanelCarreras.setBackground(new java.awt.Color(153, 153, 153));
        scrollPanelCarreras.setForeground(new java.awt.Color(255, 255, 255));

        btnMostrarDatosCarrera.setBackground(new java.awt.Color(255, 10, 84));
        btnMostrarDatosCarrera.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        btnMostrarDatosCarrera.setForeground(new java.awt.Color(255, 255, 255));
        btnMostrarDatosCarrera.setText("Mostrar datos de la carrera");

        bntMostrarAlumnosInscriptos.setBackground(new java.awt.Color(255, 10, 84));
        bntMostrarAlumnosInscriptos.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        bntMostrarAlumnosInscriptos.setForeground(new java.awt.Color(255, 255, 255));
        bntMostrarAlumnosInscriptos.setText("Mostrar alumnos inscriptos");

        javax.swing.GroupLayout panelContenidoCarrerasLayout = new javax.swing.GroupLayout(panelContenidoCarreras);
        panelContenidoCarreras.setLayout(panelContenidoCarrerasLayout);
        panelContenidoCarrerasLayout.setHorizontalGroup(
            panelContenidoCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenidoCarrerasLayout.createSequentialGroup()
                .addGroup(panelContenidoCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContenidoCarrerasLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(scrollPanelCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelContenidoCarrerasLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(panelContenidoCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloSeleccionaCarreraPanelCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seleccionarCarreraBoxPanelCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelContenidoCarrerasLayout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(btnMostrarDatosCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelContenidoCarrerasLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(bntMostrarAlumnosInscriptos)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        panelContenidoCarrerasLayout.setVerticalGroup(
            panelContenidoCarrerasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenidoCarrerasLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(tituloSeleccionaCarreraPanelCarreras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seleccionarCarreraBoxPanelCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMostrarDatosCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntMostrarAlumnosInscriptos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(scrollPanelCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenidoCarreras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenidoCarreras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Método para inicializar los componentes adicionales
    private void inicializarComponentes() {
        // Crear un JTextArea para mostrar la información en el JScrollPane
        JTextArea textArea = new JTextArea();
        textArea.setEditable(false);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        scrollPanelCarreras.setViewportView(textArea);
        
        // Llenar el comboBox con los nombres de las carreras disponibles
        cargarCarreras();
        
        // Añadir ActionListener para el botón "Mostrar datos de la carrera"
        btnMostrarDatosCarrera.addActionListener((java.awt.event.ActionEvent evt) -> {
            mostrarDatosCarrera();
        });
        
        // Añadir ActionListener para el botón "Mostrar alumnos inscriptos"
        bntMostrarAlumnosInscriptos.addActionListener((java.awt.event.ActionEvent evt) -> {
            mostrarAlumnosInscriptos();
        });
    }
    
    // Método para cargar las carreras en el comboBox
    private void cargarCarreras() {
        ArrayList<Carrera> carreras = gestion.getListaDeCarreras();
        seleccionarCarreraBoxPanelCarreras.removeAllItems();
        
        for (Carrera carrera : carreras) {
            seleccionarCarreraBoxPanelCarreras.addItem(carrera.getNombreCarrera());
        }
    }
        // Método para mostrar los datos de la carrera seleccionada
    private void mostrarDatosCarrera() {
        String nombreCarrera = (String) seleccionarCarreraBoxPanelCarreras.getSelectedItem();
        if (nombreCarrera != null) {
            for (Carrera carrera : gestion.getListaDeCarreras()) {
                if (carrera.getNombreCarrera().equals(nombreCarrera)) {
                    StringBuilder infoCarrera = new StringBuilder();
                    infoCarrera.append("Nombre de la Carrera: ").append(nombreCarrera).append("\n");
                    
                    // Determinar el tipo de plan según la clase
                    String tipoPlan = "E"; // Por defecto, asumimos Plan E
                    if (carrera.getPlanDeEstudio() != null) {
                        String nombreClase = carrera.getPlanDeEstudio().getClass().getSimpleName();
                        if (nombreClase.endsWith("A")) tipoPlan = "A";
                        else if (nombreClase.endsWith("B")) tipoPlan = "B";
                        else if (nombreClase.endsWith("C")) tipoPlan = "C";
                        else if (nombreClase.endsWith("D")) tipoPlan = "D";
                    }
                    
                    infoCarrera.append("Tipo de plan: ").append(tipoPlan).append("\n");
                    infoCarrera.append("Total de materias optativas en la carrera: ")
                              .append(carrera.getMateriaOptativasRequeridas()).append("\n");
                    infoCarrera.append("Duración de la carrera: ")
                              .append(carrera.getDuracionCarrera()).append(" años\n");
                    
                    // Mostrar materias obligatorias
                    infoCarrera.append("Materias Obligatorias:\n");
                    for (Materia materia : carrera.getListaDeMaterias()) {
                        if (materia.getObligatoria()) {
                            infoCarrera.append("- ").append(materia.getNombreMateria())
                                      .append(" (").append(materia.getCodigoMateria()).append(")\n");
                        }
                    }
                    
                    // Mostrar materias optativas
                    infoCarrera.append("Materias Optativas:\n");
                    boolean tieneOptativas = false;
                    for (Materia materia : carrera.getListaDeMaterias()) {
                        if (!materia.getObligatoria()) {
                            infoCarrera.append("- ").append(materia.getNombreMateria())
                                      .append(" (").append(materia.getCodigoMateria()).append(")\n");
                            tieneOptativas = true;
                        }
                    }
                    if (!tieneOptativas) {
                        infoCarrera.append("- No hay materias optativas\n");
                    }
                    
                    // Mostrar la información en el JTextArea
                    JTextArea textArea = (JTextArea) scrollPanelCarreras.getViewport().getView();
                    textArea.setText(infoCarrera.toString());
                    textArea.setCaretPosition(0); // Scroll al inicio
                    break;
                }
            }
        }
    }
    
    // Método para mostrar los alumnos inscriptos en la carrera seleccionada
    private void mostrarAlumnosInscriptos() {
        String nombreCarrera = (String) seleccionarCarreraBoxPanelCarreras.getSelectedItem();
        if (nombreCarrera != null) {
            for (Carrera carrera : gestion.getListaDeCarreras()) {
                if (carrera.getNombreCarrera().equals(nombreCarrera)) {
                    StringBuilder infoAlumnos = new StringBuilder();
                    infoAlumnos.append("Nombre de la Carrera: ").append(nombreCarrera).append("\n");
                    infoAlumnos.append("Alumnos Inscriptos:\n");
                    
                    ArrayList<Alumno> alumnosCarrera = carrera.getListaDeAlumnos();
                    if (alumnosCarrera.isEmpty()) {
                        infoAlumnos.append("- No hay alumnos inscriptos en esta carrera\n");
                    } else {
                        for (Alumno alumno : alumnosCarrera) {
                            infoAlumnos.append("- ").append(alumno.getNombre())
                                      .append(" ").append(alumno.getApellido()).append("\n");
                        }
                    }
                    
                    // Mostrar la información en el JTextArea
                    JTextArea textArea = (JTextArea) scrollPanelCarreras.getViewport().getView();
                    textArea.setText(infoAlumnos.toString());
                    textArea.setCaretPosition(0); // Scroll al inicio
                    break;
                }
            }
        }
    }
    
    private void seleccionarCarreraBoxPanelCarrerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarCarreraBoxPanelCarrerasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarCarreraBoxPanelCarrerasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntMostrarAlumnosInscriptos;
    private javax.swing.JButton btnMostrarDatosCarrera;
    private javax.swing.JPanel panelContenidoCarreras;
    private javax.swing.JScrollPane scrollPanelCarreras;
    private javax.swing.JComboBox<String> seleccionarCarreraBoxPanelCarreras;
    private javax.swing.JLabel tituloSeleccionaCarreraPanelCarreras;
    // End of variables declaration//GEN-END:variables
}
